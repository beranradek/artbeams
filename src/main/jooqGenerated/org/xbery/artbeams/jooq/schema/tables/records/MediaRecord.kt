/*
 * This file is generated by jOOQ.
 */
package org.xbery.artbeams.jooq.schema.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.xbery.artbeams.jooq.schema.tables.Media


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MediaRecord() : UpdatableRecordImpl<MediaRecord>(Media.MEDIA) {

    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var filename: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var contentType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var size: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var `data`: ByteArray?
        set(value): Unit = set(4, value)
        get(): ByteArray? = get(4) as ByteArray?

    open var privateAccess: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var width: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var height: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised MediaRecord
     */
    constructor(id: String? = null, filename: String? = null, contentType: String? = null, size: Int? = null, `data`: ByteArray? = null, privateAccess: Boolean? = null, width: Int? = null, height: Int? = null): this() {
        this.id = id
        this.filename = filename
        this.contentType = contentType
        this.size = size
        this.`data` = `data`
        this.privateAccess = privateAccess
        this.width = width
        this.height = height
        resetChangedOnNotNull()
    }
}
